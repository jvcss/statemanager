# üìå Flutter Overlay Strategy (MVVM + GetX Friendly)

Este m√≥dulo prop√µe uma **estrutura escal√°vel para uso de overlays embutidos** no app Flutter, permitindo guiar o usu√°rio (onboarding, foco em widgets, instru√ß√µes contextuais) de forma reus√°vel e desacoplada. Ideal para primeira navega√ß√£o ou tutoriais interativos.

## üöÄ Objetivo

Facilitar o crescimento do app ao longo do tempo com um adaptador √∫nico que injeta overlays visuais em qualquer parte da UI, sem exigir m√∫ltiplas inst√¢ncias de l√≥gica por tela.

---

## üß† Conceito Arquitetural

**Camadas envolvidas:**

- `OverlayController` ‚Üí Gerencia o estado do overlay (aberto, alvo, estilo)
- `OverlayService` ‚Üí Respons√°vel pela cria√ß√£o e remo√ß√£o do `OverlayEntry`
- `OverlayWrapper` ‚Üí Widget que envolve a UI base e permite ativar overlay sobre widgets-alvo
- `OverlayBinding` ‚Üí Vincula controller ao ciclo de vida da rota
- `@OnboardingStep` ‚Üí Pode ser usado como anota√ß√£o/filtro para exibir overlay por contexto

---

## üì¶ Estrutura Recomendada

```
/lib
‚îú‚îÄ‚îÄ overlays/
‚îÇ   ‚îú‚îÄ‚îÄ overlay_controller.dart      # extends GetxController
‚îÇ   ‚îú‚îÄ‚îÄ overlay_service.dart         # Singleton com l√≥gica de OverlayEntry
‚îÇ   ‚îú‚îÄ‚îÄ overlay_wrapper.dart         # Widget HOC que aplica overlay
‚îÇ   ‚îú‚îÄ‚îÄ onboarding_steps.dart        # Enum ou configura√ß√£o de passos
‚îÇ   ‚îî‚îÄ‚îÄ overlay_binding.dart         # Binding para rotas que usam overlay
```

---

## üîÅ Ciclo de Vida do Overlay

```mermaid
graph TD;
    Start -->|Init| OverlayController
    OverlayController --> OverlayService
    OverlayService -->|Create| OverlayEntry
    OverlayEntry --> OverlayWrapper
    UserTap -->|Dismiss| OverlayService
    OverlayService -->|Remove| OverlayEntry
```

---

## üß™ Exemplo de Uso com GetX

```dart
// Inje√ß√£o autom√°tica
class OverlayBinding extends Bindings {
  @override
  void dependencies() {
    Get.lazyPut<OverlayController>(() => OverlayController());
  }
}

// Aplica√ß√£o de overlay na view
OverlayWrapper(
  child: MyPageContent(),
  step: OnboardingSteps.exploreTab,
)
```

---

## üßπ Modulariza√ß√£o Avan√ßada (Opcional)

- Use `OverlayModule` para agrupar tudo como plugin do app
- Permite ativar/desativar overlays dinamicamente por feature flag ou n√≠vel de acesso
- Pode integrar com GetStorage para lembrar se o usu√°rio j√° viu os highlights

---

## ‚úÖ Boas Pr√°ticas

- Prefira `OverlayEntry` com `SafeArea` e `Align` para melhor posicionamento
- Use `GetBuilder` ou `Obx` no overlay apenas se precisar responder a mudan√ßas de estado
- Controle o ciclo do overlay diretamente pelo Controller (evita leaks)
- Sempre chame `dispose()` no controller ou `removeEntry()` ao sair da tela
- Evite overlays m√∫ltiplos empilhados sem controle ‚Äì mantenha singleton ativo

---

## üß≠ Futuro

- Permitir anima√ß√µes de entrada e sa√≠da
- Suporte a m√∫ltiplos idiomas no overlay (`.tr`)
- Persist√™ncia de progresso de onboarding via local storage

---

Feito para apps MVVM usando **Flutter 3.x + GetX 5.x**, com suporte total √† **reatividade leve** e **inicializa√ß√£o modular**.

